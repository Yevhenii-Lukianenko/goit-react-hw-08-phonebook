{"version":3,"file":"static/js/524.f0c8c002.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Contacts/ContactForm/ContactForm.styled.jsx","components/Contacts/ContactForm/ContactForm.jsx","components/Contacts/ContactsList/ContactsList.styled.jsx","components/Contacts/ContactItem/ContactItem.styled.jsx","components/Contacts/ContactItem/ContactItem.jsx","components/Contacts/ContactsFilter/ContactsFilter.jsx","components/Contacts/ContactsList/ContactsList.jsx","components/Loaders/LoaderContacts.jsx","pages/contacts/Contacts.styled.jsx","pages/contacts/Contacts.jsx"],"sourcesContent":["export const selectFilter = state => state.filter;\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectIsAdding = state => state.contacts.isAdding;\nexport const selectIsDeleting = state => state.contacts.isDeleting;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FormContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 12px;\n  padding: 20px;\n  margin-right: 24px;\n  width: 400px;\n  height: fit-content;\n  border-radius: 6px;\n  background-color: #ebe8e2;\n`;\n\nexport const Title = styled.p`\n  font-weight: 700;\n  font-size: 20px;\n`;\n\nexport const Submit = styled.button`\n  margin: 0 auto;\n  padding: 0;\n  width: 40px;\n  height: 40px;\n  color: #83ae8c;\n  background-color: transparent;\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: scale 0.5s ease;\n  &:hover {\n    scale: 1.2;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../../redux/contacts/operations';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport { selectContacts, selectIsAdding } from 'redux/contacts/selectors';\n\nimport { FormContainer, Title, Submit } from './ContactForm.styled';\nimport { LoaderButton } from 'components/Loaders/LoaderButton';\nimport { TextField } from '@mui/material';\nimport { IoIosAddCircle } from 'react-icons/io';\n\nexport const ContactForm = () => {\n  const [state, setState] = useState({\n    name: '',\n    number: '',\n  });\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsAdding);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    for (const contact of contacts) {\n      if (contact.name.toLowerCase() === state.name.toLowerCase()) {\n        return alert(`${state.name} is already in contacts.`);\n      }\n    }\n    try {\n      await dispatch(addContact(state));\n      reset();\n    } catch (error) {\n      Notify.failure(`Error! ${error}`);\n    }\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    setState({ ...state, [name]: value });\n  };\n\n  const reset = () => setState({ name: '', number: '' });\n\n  return (\n    <FormContainer onSubmit={handleSubmit}>\n      <Title>Add a new contact</Title>\n      <TextField\n        type=\"text\"\n        name=\"name\"\n        value={state.name}\n        onChange={handleChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        label=\"Name\"\n        size=\"small\"\n        required\n      />\n      <TextField\n        type=\"tel\"\n        name=\"number\"\n        value={state.number}\n        onChange={handleChange}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        label=\"Number\"\n        size=\"small\"\n        required\n      />\n      <Submit type=\"submit\">\n        {isLoading ? (\n          <LoaderButton />\n        ) : (\n          <IoIosAddCircle style={{ width: '2.5em', height: '2.5em' }} />\n        )}\n      </Submit>\n    </FormContainer>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactsContainer = styled.div`\n  box-sizing: border-box;\n  width: 100%;\n  height: fit-content;\n  padding: 20px;\n  background-color: #ebe8e2;\n  border-radius: 8px;\n`;\n\nexport const PanelLoyout = styled.div`\n  display: flex;\n  align-items: self-start;\n  justify-content: space-between;\n`;\n\nexport const Title = styled.p`\n  font-weight: 700;\n  font-size: 24px;\n  padding: 0 8px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  padding: 0;\n  margin-top: 24px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  padding: 10px 20px;\n  background-color: #ded8ce;\n  // border: 1px solid black;\n  border-radius: 8px;\n`;\n\nexport const ContactText = styled.p`\n  &:not(:last-child) {\n    margin-right: 20px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  padding: 0;\n  height: 40px;\n  width: 40px;\n  color: #e8768f;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  transition: scale 0.5s ease;\n  &:hover {\n    scale: 1.3;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectIsDeleting } from 'redux/contacts/selectors';\n\nimport { Item, ContactText, Button } from './ContactItem.styled';\nimport { LoaderButton } from 'components/Loaders/LoaderButton';\nimport { AiOutlineUser, AiOutlinePhone, AiOutlineDelete } from 'react-icons/ai';\n// import { BsPencil } from 'react-icons/bs';\n\nexport const ContactItem = ({ contact }) => {\n  const [isDeleting, setDeleting] = useState(false);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsDeleting);\n\n  const handleDelete = () => {\n    setDeleting(true);\n    dispatch(deleteContact(contact.id));\n  };\n\n  return (\n    <Item>\n      <ContactText>\n        <AiOutlineUser />: {contact.name}\n      </ContactText>\n      <ContactText>\n        <AiOutlinePhone />: {contact.number}\n      </ContactText>\n      <Button type=\"button\" onClick={handleDelete}>\n        {isLoading && isDeleting ? (\n          <LoaderButton />\n        ) : (\n          <AiOutlineDelete style={{ width: '1.5em', height: '1.5em' }} />\n        )}\n      </Button>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filtersSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nimport { TextField } from '@mui/material';\n\nexport const ContactsFilter = () => {\n  const filterValue = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <TextField\n      type=\"text\"\n      value={filterValue}\n      onChange={changeFilter}\n      label=\"Find contacts by name\"\n      size=\"small\"\n    />\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nimport {\n  ContactsContainer,\n  PanelLoyout,\n  Title,\n  List,\n} from './ContactsList.styled';\nimport { ContactItem } from 'components/Contacts/ContactItem/ContactItem';\nimport { ContactsFilter } from '../ContactsFilter/ContactsFilter';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ContactsContainer>\n      <PanelLoyout>\n        <Title>Your contacts</Title>\n        <ContactsFilter />\n      </PanelLoyout>\n\n      <List>\n        {contacts.map(contact => (\n          <ContactItem contact={contact} key={contact.id} />\n        ))}\n      </List>\n    </ContactsContainer>\n  );\n};\n","import { RotatingLines } from 'react-loader-spinner';\n\nexport const LoaderContacts = () => (\n  <div\n    style={{\n      position: 'fixed',\n      top: '1px',\n      left: '1px',\n      zIndex: '100',\n      display: 'flex',\n      justifyContent: 'center',\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'whitesmoke',\n    }}\n  >\n    <RotatingLines\n      strokeColor=\"black\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"50\"\n      visible={true}\n    />\n  </div>\n);\n","import styled from '@emotion/styled';\n\nexport const ContactsContainer = styled.div`\n  // position: relative;\n  display: flex;\n`;\n\nexport const ContactsTitle = styled.h1`\n  // position: absolute;\n  // top: -20px;\n  // left: 90px;\n  // padding: 0 8px;\n  // background-color: #ebe8e2;\n`;\n\nexport const ContactsPanel = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 28px;\n  margin-bottom: 24px;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { useNavigate } from 'react-router-dom';\n\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { selectIsLogin } from 'redux/auth/selectors';\n\nimport { ContactForm } from 'components/Contacts/ContactForm/ContactForm';\nimport { ContactsList } from 'components/Contacts/ContactsList/ContactsList';\nimport { LoaderContacts } from 'components/Loaders/LoaderContacts';\nimport { ContactsContainer } from './Contacts.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const isLogin = useSelector(selectIsLogin);\n  // const navigate = useNavigate();\n\n  useEffect(() => {\n    // if (!isLogin) {\n    //   return navigate('/login');\n    // }\n    dispatch(fetchContacts());\n    // }, [dispatch, isLogin, navigate]);\n  }, [dispatch, isLogin]);\n\n  return (\n    <ContactsContainer>\n      <ContactForm />\n\n      {isLoading ? <LoaderContacts /> : <ContactsList />}\n    </ContactsContainer>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectFilter","state","filter","selectContacts","contacts","items","selectIsLoading","isLoading","selectIsAdding","isAdding","selectIsDeleting","isDeleting","selectVisibleContacts","normalizedFilter","toLowerCase","contact","name","includes","FormContainer","styled","Title","Submit","ContactForm","useState","number","setState","useSelector","dispatch","useDispatch","handleSubmit","e","preventDefault","alert","addContact","reset","Notify","handleChange","currentTarget","value","onSubmit","TextField","type","onChange","pattern","title","label","size","required","LoaderButton","style","width","height","ContactsContainer","PanelLoyout","List","Item","ContactText","Button","ContactItem","setDeleting","onClick","deleteContact","id","ContactsFilter","filterValue","setFilter","ContactsList","map","LoaderContacts","position","top","left","zIndex","display","justifyContent","backgroundColor","strokeColor","strokeWidth","animationDuration","visible","isLogin","selectIsLogin","useEffect","fetchContacts"],"sourceRoot":""}